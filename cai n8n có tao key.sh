#!/bin/bash

# =============================================================
# K·ªäCH B·∫¢N UPDATE N8N AN TO√ÄN
#  - Ki·ªÉm tra v√† t·∫°o N8N_ENCRYPTION_KEY c·ªë ƒë·ªãnh n·∫øu ch∆∞a c√≥
#  - Ki·ªÉm tra mapping volume d·ªØ li·ªáu
#  - Backup .env, docker-compose.yml, v√† to√†n b·ªô d·ªØ li·ªáu
#  - Update image v√† kh·ªüi ƒë·ªông l·∫°i n8n v·ªõi d·ªØ li·ªáu an to√†n
# =============================================================

# ==================== THI·∫æT L·∫¨P BI·∫æN ====================

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

INSTALL_DIR="$HOME/n8n-caddy-stack"
ENV_FILE="$INSTALL_DIR/.env"
N8N_DATA_DIR="$INSTALL_DIR/n8n-data"      # S·ª≠a ƒë∆∞·ªùng d·∫´n n·∫øu volume b√™n tr√°i l√† n∆°i kh√°c

TAG="${1:-latest}" # C√≥ th·ªÉ truy·ªÅn tag version (m·∫∑c ƒë·ªãnh: latest)

set -e

echo -e "${GREEN}B·∫ÆT ƒê·∫¶U QUY TR√åNH C·∫¨P NH·∫¨T N8N AN TO√ÄN${NC}"

# ==================== 1. KI·ªÇM TRA TH∆Ø M·ª§C C√ÄI ƒê·∫∂T ====================
if [ ! -d "$INSTALL_DIR" ]; then
    echo -e "${RED}L·ªói: Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c c√†i ƒë·∫∑t t·∫°i ${INSTALL_DIR}.${NC}"
    exit 1
fi
cd "$INSTALL_DIR"

# ==================== 2. KI·ªÇM TRA HO·∫∂C T·∫†O ENCRYPTION_KEY ====================
if [ ! -f "$ENV_FILE" ]; then
    echo -e "${RED}Kh√¥ng t√¨m th·∫•y file .env ‚Äì s·∫Ω t·∫°o m·ªõi.${NC}"
    touch "$ENV_FILE"
fi
if ! grep -q "^N8N_ENCRYPTION_KEY=" "$ENV_FILE"; then
    KEY=$(openssl rand -base64 32)
    echo -e "${YELLOW}Ch∆∞a c√≥ N8N_ENCRYPTION_KEY, s·∫Ω t·∫°o t·ª± ƒë·ªông:${NC}"
    echo "N8N_ENCRYPTION_KEY=$KEY" >> "$ENV_FILE"
    echo -e "${GREEN}ƒê√£ sinh KEY v√† th√™m v√†o $ENV_FILE${NC}"
    echo "‚Üí L∆∞u l·∫°i KEY n√†y ·ªü n∆°i an to√†n: $KEY"
else
    KEY=$(grep "^N8N_ENCRYPTION_KEY=" "$ENV_FILE" | cut -d= -f2-)
    echo -e "${GREEN}ƒê√£ x√°c nh·∫≠n ENCRYPTION_KEY c·ªë ƒë·ªãnh: $KEY${NC}"
fi

# ==================== 3. KI·ªÇM TRA VOLUME MAPPING D·ªÆ LI·ªÜU ====================
if ! grep -q "/home/node/.n8n" docker-compose.yml; then
    echo -e "${RED}Kh√¥ng t√¨m th·∫•y mapping data volume cho /home/node/.n8n${NC}"
    echo "Vui l√≤ng ki·ªÉm tra docker-compose.yml ‚Äì n·∫øu update ti·∫øp s·∫Ω c√≥ nguy c∆° m·∫•t workflow!"
    exit 1
fi

# ==================== 4. SAO L∆ØU D·ªÆ LI·ªÜU C·ª∞C NHANH ====================
BACKUP_DIR="$HOME/n8n_backups/backup-$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"
cp docker-compose.yml "$BACKUP_DIR/docker-compose.yml"
cp "$ENV_FILE" "$BACKUP_DIR/.env"
if [ -d "$N8N_DATA_DIR" ]; then
    tar czf "$BACKUP_DIR/n8n-data.tgz" -C "$(dirname $N8N_DATA_DIR)" "$(basename $N8N_DATA_DIR)"
    echo -e "${GREEN}ƒê√£ BACKUP d·ªØ li·ªáu data n8n v√†o $BACKUP_DIR${NC}"
else
    echo -e "${YELLOW}Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c $N8N_DATA_DIR (volume mount t√πy ch·ªânh?), ki·ªÉm tra l·∫°i!${NC}"
fi

# ==================== 5. C·∫¨P NH·∫¨T IMAGE & UP CONTAINER ====================
echo -e "${YELLOW}ƒêang c·∫≠p nh·∫≠t image n8n:${TAG} trong docker-compose.yml...${NC}"
sed -i "s|image: n8nio/n8n:.*|image: n8nio/n8n:${TAG}|g" docker-compose.yml
echo -e "${YELLOW}B·∫Øt ƒë·∫ßu pull v√† kh·ªüi ƒë·ªông l·∫°i n8n...${NC}"
docker compose pull n8n
docker compose up -d

# ==================== 6. D·ªåN D·∫∏P IMAGE C≈® (KHI KH√îNG C·∫¶N ROLLBACK) ====================
docker image prune -f

echo -e "${GREEN}C·∫¨P NH·∫¨T ‚Äì BACKUP ‚Äì KI·ªÇM TRA KEY T·∫§T C·∫¢ ƒê√É HO√ÄN T·∫§T! üöÄ${NC}"
echo -e "${GREEN}KEY encryption: $KEY${NC}"
echo -e "${YELLOW}ƒê√£ backup to√†n b·ªô config t·∫°i $BACKUP_DIR. ƒê∆∞·ªùng d·∫´n data: $N8N_DATA_DIR${NC}"
